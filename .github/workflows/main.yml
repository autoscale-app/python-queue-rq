name: Main

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}

jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        rq-version: ["1.11", "1.12", "1.13"]
        redis-version: ["6", "7"]

    services:
      redis:
        image: redis:${{ matrix.redis-version }}
        ports: ["6379:6379"]
        options: --entrypoint redis-server

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
        poetry add rq@${{ matrix.rq-version }}

    - name: Run tests
      run: |
        poetry run paver test
        poetry run paver coverage_report

    - name: Run linters
      run: poetry run paver lint

    - name: Build package
      run: poetry build

  publish:
    needs: validate
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install

    - name: Build package
      run: poetry build

    - name: Publish a Python distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
